name: multi-platform release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  rust:
    name: Rust ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin
          - os: windows-latest
            target: x86_64-pc-windows-msvc
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: ${{ matrix.target }}
      - name: Build
        env:
          APP_VERSION: ${{ github.ref_name }}
        run: |
          cargo build --manifest-path aider-cli/Cargo.toml --release --target ${{ matrix.target }}
      - name: Smoke test
        if: matrix.os != 'ubuntu-latest' || matrix.target == 'x86_64-unknown-linux-gnu'
        run: |
          target/${{ matrix.target }}/release/aider-cli${{ matrix.os == 'windows-latest' && '.exe' || '' }} --version
      - name: Archive artifact
        shell: bash
        run: |
          cd target/${{ matrix.target }}/release
          BIN="aider-cli${{ matrix.os == 'windows-latest' && '.exe' || '' }}"
          tar czf "$BIN-${{ matrix.target }}.tar.gz" "$BIN"
          if command -v sha256sum > /dev/null; then
            sha256sum "$BIN-${{ matrix.target }}.tar.gz" > "$BIN-${{ matrix.target }}.tar.gz.sha256"
          else
            shasum -a 256 "$BIN-${{ matrix.target }}.tar.gz" > "$BIN-${{ matrix.target }}.tar.gz.sha256"
          fi
          if command -v sha256sum > /dev/null; then
            sha256sum -c "$BIN-${{ matrix.target }}.tar.gz.sha256"
          else
            shasum -a 256 -c "$BIN-${{ matrix.target }}.tar.gz.sha256"
          fi
      - uses: actions/upload-artifact@v4
        with:
          name: rust-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/aider-cli-${{ matrix.target }}.tar.gz*

  flutter:
    name: Flutter ${{ matrix.build }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            build: linux
          - os: windows-latest
            build: windows
          - os: macos-latest
            build: macos
          - os: ubuntu-latest
            build: web
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: stable
      - name: Build
        working-directory: flutter_app
        run: flutter build ${{ matrix.build }} --release
      - name: Smoke test
        if: matrix.build != 'web'
        run: |
          BIN=flutter_app/build/${{ matrix.build }}/*/release/*/flutter_app${{ matrix.os == 'windows-latest' && '.exe' || '' }}
          $BIN --version || true
      - name: Package
        shell: bash
        run: |
          cd flutter_app/build
          case "${{ matrix.build }}" in
            linux)
              DEST=linux
              ;;
            windows)
              DEST=windows
              ;;
            macos)
              DEST=macos
              ;;
            web)
              DEST=web
              ;;
          esac
          zip -r "flutter-${{ matrix.build }}.zip" "$DEST"
          if command -v sha256sum > /dev/null; then
            sha256sum "flutter-${{ matrix.build }}.zip" > "flutter-${{ matrix.build }}.zip.sha256"
          else
            shasum -a 256 "flutter-${{ matrix.build }}.zip" > "flutter-${{ matrix.build }}.zip.sha256"
          fi
          if command -v sha256sum > /dev/null; then
            sha256sum -c "flutter-${{ matrix.build }}.zip.sha256"
          else
            shasum -a 256 -c "flutter-${{ matrix.build }}.zip.sha256"
          fi
      - uses: actions/upload-artifact@v4
        with:
          name: flutter-${{ matrix.build }}
          path: flutter_app/build/flutter-${{ matrix.build }}.zip*

  go-proxy:
    name: Go proxy ${{ matrix.goos }}-${{ matrix.goarch }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: 'stable'
      - name: Build
        working-directory: go-shell
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 0
        run: go build -o ../proxy-${{ matrix.goos }}-${{ matrix.goarch }} .
      - name: Smoke test
        if: matrix.goos == 'linux' && matrix.goarch == 'amd64'
        run: ./proxy-linux-amd64 --version || true
      - name: Package
        shell: bash
        run: |
          BIN="proxy-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.exe' || '' }}"
          tar czf "$BIN.tar.gz" "$BIN"
          if command -v sha256sum > /dev/null; then
            sha256sum "$BIN.tar.gz" > "$BIN.tar.gz.sha256"
          else
            shasum -a 256 "$BIN.tar.gz" > "$BIN.tar.gz.sha256"
          fi
          if command -v sha256sum > /dev/null; then
            sha256sum -c "$BIN.tar.gz.sha256"
          else
            shasum -a 256 -c "$BIN.tar.gz.sha256"
          fi
      - uses: actions/upload-artifact@v4
        with:
          name: proxy-${{ matrix.goos }}-${{ matrix.goarch }}
          path: proxy-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz*

  release:
    needs: [rust, flutter, go-proxy]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: dist
      - name: Generate release notes
        id: notes
        uses: conventional-changelog/standard-version@v2
        with:
          tag-prefix: ''
          release-as: ${{ github.ref_name }}
          dry-run: true
      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          body: ${{ steps.notes.outputs.changelog }}
          files: dist/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
